{"version":3,"file":"index.umd.min.js","sources":["../src/schedulerUtils.js","../src/internal/msElapsed.js","../src/msElapsed.js","../src/during.js","../src/internal/during.js","../src/periodOf.js","../src/internal/periodOf.js","../src/toggle.js","../src/internal/toggle.js","../src/easing/easingUtils.js","../src/easing/linear.js","../src/easing/quadratic.js","../src/easing/cubic.js","../src/easing/sine.js","../src/easing/exponential.js","../src/easing/elastic.js","../src/easing/circle.js","../src/easing/back.js","../src/easing/index.js"],"sourcesContent":["import { async } from 'rxjs/scheduler/async'\nimport { animationFrame } from 'rxjs/scheduler/animationFrame'\n\nconst SchedulerConstructor =\n  Object.getPrototypeOf(Object.getPrototypeOf(async)).constructor\nconst defaultScheduler = animationFrame\n\nconst withDefaultScheduler =\n  (f) => (scheduler = defaultScheduler) => f(scheduler)\n\nconst buildSchedulerTypeError = (name) => {\n  const errorMessage =\n    `scheduler parameter for ${name} is not an instance of Scheduler`\n\n  return new TypeError(errorMessage)\n}\nconst withSchedulerChecker =\n  (f) => (scheduler) => {\n    if (!(scheduler instanceof SchedulerConstructor)) {\n      throw buildSchedulerTypeError(f.name)\n    }\n\n    return f(scheduler)\n  }\n\nconst withScheduler =\n  (f) => withDefaultScheduler(withSchedulerChecker(f))\n\nexport {\n  withDefaultScheduler,\n  withSchedulerChecker,\n  withScheduler,\n}\n","import { defer } from 'rxjs/observable/defer'\nimport { interval } from 'rxjs/observable/interval'\nimport { map } from 'rxjs/operators/map'\n\nconst msElapsed =\n  (scheduler) => defer(() => {\n    const startTime = scheduler.now()\n\n    return interval(0, scheduler).pipe(\n      map(() => scheduler.now() - startTime),\n    )\n  })\n\nexport {\n  msElapsed,\n}\n","import { withScheduler } from './schedulerUtils'\nimport { msElapsed as msElapsed_ } from './internal/msElapsed'\n\nconst msElapsed = withScheduler(msElapsed_)\n\nexport {\n  msElapsed,\n}\n","import { withScheduler } from './schedulerUtils'\nimport { during as during_ } from './internal/during'\n\nconst during = withScheduler(during_)\n\nexport {\n  during,\n}\n","import { concat } from 'rxjs/observable/concat'\nimport { map } from 'rxjs/operators/map'\nimport { takeWhile } from 'rxjs/operators/takeWhile'\n\nimport { msElapsed } from './msElapsed'\n\nconst durationTypeErrorMessage =\n  'second argument (duration) of during should be a number'\nconst durationRangeErrorMessage =\n  'second argument (duration) of during should be a positive number'\n\nconst during =\n  (scheduler) => (duration) => {\n    if (typeof duration !== 'number') {\n      throw new TypeError(durationTypeErrorMessage)\n    }\n\n    if (duration <= 0) {\n      throw new RangeError(durationRangeErrorMessage)\n    }\n\n    return msElapsed(scheduler)\n      .pipe(\n        map((ms) => ms / duration),\n        takeWhile((percent) => percent < 1),\n        (res$) => concat(res$, [1]),\n      )\n  }\n\nexport {\n  during,\n}\n","import { withScheduler } from './schedulerUtils'\nimport { periodOf as periodOf_ } from './internal/periodOf'\n\nconst periodOf = withScheduler(periodOf_)\n\nexport {\n  periodOf,\n}\n","import { interval } from 'rxjs/observable/interval'\nimport { map } from 'rxjs/operators/map'\nimport { take } from 'rxjs/operators/take'\n\nconst periodTypeErrorMessage =\n  'second argument (period) of periodOf should be a number'\nconst periodRangeErrorMessage =\n  'second argument (period) of periodOf should be a positive number'\n\nconst cyclesTypeErrorMessage =\n  'third argument (cycles) of periodOf should be undefined or a number'\nconst cyclesRangeErrorMessage =\n  'third argument (cycles) of periodOf should be a positive number'\n\nconst periodOf =\n  (scheduler) => (period, cycles) => {\n    if (typeof period !== 'number') {\n      throw new TypeError(periodTypeErrorMessage)\n    }\n\n    if (period <= 0) {\n      throw new RangeError(periodRangeErrorMessage)\n    }\n\n    if (cycles) {\n      if (typeof cycles !== 'number') {\n        throw new TypeError(cyclesTypeErrorMessage)\n      }\n\n      if (cycles <= 0) {\n        throw new RangeError(cyclesRangeErrorMessage)\n      }\n    }\n\n    cycles = cycles || Number.POSITIVE_INFINITY\n\n    return interval(period, scheduler).pipe(\n      map((cycle) => cycle + 1),\n      take(cycles),\n    )\n  }\n\nexport {\n  periodOf,\n}\n","import { withScheduler } from './schedulerUtils'\nimport { toggle as toggle_ } from './internal/toggle'\n\nconst toggle = withScheduler(toggle_)\n\nexport {\n  toggle,\n}\n","import { interval } from 'rxjs/observable/interval'\nimport { map } from 'rxjs/operators/map'\nimport { take } from 'rxjs/operators/take'\n\nconst periodTypeErrorMessage =\n  'second argument (period) of toggle should be a number'\nconst periodRangeErrorMessage =\n  'second argument (period) of toggle should be a positive number'\n\nconst cyclesTypeErrorMessage =\n  'third argument (cycles) of toggle should be undefined or a number'\nconst cyclesRangeErrorMessage =\n  'third argument (cycles) of toggle should be a positive number'\n\nconst toggle =\n  (scheduler) => (period, cycles) => {\n    if (typeof period !== 'number') {\n      throw new TypeError(periodTypeErrorMessage)\n    }\n\n    if (period <= 0) {\n      throw new RangeError(periodRangeErrorMessage)\n    }\n\n    if (cycles) {\n      if (typeof cycles !== 'number') {\n        throw new TypeError(cyclesTypeErrorMessage)\n      }\n\n      if (cycles <= 0) {\n        throw new RangeError(cyclesRangeErrorMessage)\n      }\n    }\n\n    cycles = cycles || Number.POSITIVE_INFINITY\n\n    return interval(period, scheduler).pipe(\n      map((cycle) => cycle % 2 === 0),\n      take(cycles),\n    )\n  }\n\nexport {\n  toggle,\n}\n","const buildRangeError = (name) => {\n  const errorMessage =\n    `input of ${name} should be smaller than 1, and larger than 0`\n\n  return new RangeError(errorMessage)\n}\nconst buildTypeError = () => {\n  const errorMessage =\n    `input of withDomainChecker should have in, out, inout property.`\n\n  return new TypeError(errorMessage)\n}\n\nconst withDomainCheckerImpl = (f) => (x) => {\n  if (x < 0 || x > 1) {\n    throw buildRangeError(f.name)\n  }\n\n  return f(x)\n}\nconst withDomainChecker = (f) => {\n  if (!f.in || !f.out || !f.inout) {\n    throw buildTypeError()\n  }\n\n  const newF = withDomainCheckerImpl(f)\n  newF.in = withDomainCheckerImpl(f.in)\n  newF.out = withDomainCheckerImpl(f.out)\n  newF.inout = withDomainCheckerImpl(f.inout)\n\n  return newF\n}\n\nconst asEaseOut = (f) => (x) => 1 - f(1 - x)\nconst asEaseInOut = (f) => (x) => x < 0.5 ?\n  f(2 * x) / 2 :\n  1 - f(2 * (1 - x)) / 2\n\nexport {\n  asEaseOut,\n  asEaseInOut,\n  withDomainChecker,\n}\n","import { asEaseOut, asEaseInOut } from './easingUtils'\n\nconst linear = (x) => x\n\nlinear.in = linear\nlinear.out = asEaseOut(linear)\nlinear.inout = asEaseInOut(linear)\n\nexport {\n  linear,\n}\n","import { asEaseOut, asEaseInOut } from './easingUtils'\n\nconst quadratic = (x) => x*x\n\nquadratic.in = quadratic\nquadratic.out = asEaseOut(quadratic)\nquadratic.inout = asEaseInOut(quadratic)\n\nexport {\n  quadratic,\n}\n","import { asEaseOut, asEaseInOut } from './easingUtils'\n\nconst cubic = (x) => x*x*x\n\ncubic.in = cubic\ncubic.out = asEaseOut(cubic)\ncubic.inout = asEaseInOut(cubic)\n\nexport {\n  cubic,\n}\n","const sine = (x) => 1 - Math.cos(x * Math.PI / 2)\n\nsine.in = sine\nsine.out = (x) => Math.sin(x * Math.PI / 2)\nsine.inout = (x) => (1 - Math.cos(x * Math.PI)) / 2\n\nexport {\n  sine,\n}\n","import { asEaseOut, asEaseInOut } from './easingUtils'\n\nconst exponential = (x) => x === 0 ? 0 : Math.pow(2, 10 * (x - 1))\n\nexponential.in = exponential\nexponential.out = asEaseOut(exponential)\nexponential.inout = asEaseInOut(exponential)\n\nexport {\n  exponential,\n}\n","import { asEaseOut, asEaseInOut } from './easingUtils'\n\nconst { PI, pow, sin } = Math\n\nconst elastic = (t) => t === 0 ?\n  0 :\n  pow(2, 10 * (t - 1)) * sin(t * (13 / 2) * PI)\n\nelastic.in = elastic\nelastic.out = asEaseOut(elastic)\nelastic.inout = asEaseInOut(elastic)\n\nexport {\n  elastic,\n}\n","import { asEaseInOut, asEaseOut } from './easingUtils'\n\nconst circle = (t) => 1 - Math.sqrt(1 - t*t)\n\ncircle.in = circle\ncircle.out = asEaseOut(circle)\ncircle.inout = asEaseInOut(circle)\n\nexport {\n  circle,\n}\n","import { asEaseInOut, asEaseOut } from './easingUtils'\n\nconst back = (t) => t * t * (Math.E * t - Math.E + 1)\n\nback.in = back\nback.out = asEaseOut(back)\nback.inout = asEaseInOut(back)\n\nexport {\n  back,\n}\n","import { linear as linear_ } from './linear'\nimport { quadratic as quadratic_ } from './quadratic'\nimport { cubic as cubic_ } from './cubic'\nimport { sine as sine_ } from './sine'\nimport { exponential as exponential_ } from './exponential'\nimport { elastic as elastic_ } from './elastic'\nimport { circle as circle_ } from './circle'\nimport { back as back_ } from './back'\nimport { withDomainChecker } from './easingUtils'\n\nconst linear = withDomainChecker(linear_)\nconst quadratic = withDomainChecker(quadratic_)\nconst cubic = withDomainChecker(cubic_)\nconst sine = withDomainChecker(sine_)\nconst exponential = withDomainChecker(exponential_)\nconst elastic = withDomainChecker(elastic_)\nconst circle = withDomainChecker(circle_)\nconst back = withDomainChecker(back_)\n\nexport {\n  linear,\n  quadratic,\n  cubic,\n  sine,\n  exponential,\n  elastic,\n  circle,\n  back,\n}\n"],"names":["SchedulerConstructor","Object","getPrototypeOf","async","constructor","defaultScheduler","animationFrame","withSchedulerChecker","f","scheduler","name","errorMessage","TypeError","buildSchedulerTypeError","withScheduler","withDefaultScheduler","msElapsed","defer","startTime","now","interval","pipe","map","msElapsed_","during","duration","RangeError","ms","takeWhile","percent","res$","concat","periodOf","period","cycles","Number","POSITIVE_INFINITY","cycle","take","toggle","withDomainCheckerImpl","x","buildRangeError","withDomainChecker","in","out","inout","newF","asEaseOut","asEaseInOut","linear","quadratic","cubic","sine","Math","cos","PI","sin","exponential","pow","elastic","t","circle","sqrt","back","E","linear_","quadratic_","cubic_","sine_","exponential_","elastic_","circle_","back_"],"mappings":"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"}