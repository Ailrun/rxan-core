{"version":3,"file":"index.umd.js","sources":["../src/schedulerUtils.js","../src/internal/msElapsed.js","../src/msElapsed.js","../src/internal/during.js","../src/during.js","../src/internal/periodOf.js","../src/periodOf.js","../src/internal/toggle.js","../src/toggle.js","../src/easing/easingUtils.js","../src/easing/linear.js","../src/easing/quadratic.js","../src/easing/cubic.js","../src/easing/sine.js","../src/easing/exponential.js","../src/easing/elastic.js","../src/easing/circle.js","../src/easing/back.js","../src/easing/index.js"],"sourcesContent":["import { Scheduler, animationFrameScheduler } from 'rxjs'\n\nconst defaultScheduler = animationFrameScheduler\n\nconst withDefaultScheduler =\n  (f) => (scheduler = defaultScheduler) => f(scheduler)\n\nconst buildSchedulerTypeError = (name) => {\n  const errorMessage =\n    `scheduler parameter for ${name} is not an instance of Scheduler`\n\n  return new TypeError(errorMessage)\n}\nconst withSchedulerChecker =\n  (f) => (scheduler) => {\n    if (!(scheduler instanceof Scheduler)) {\n      throw buildSchedulerTypeError(f.name)\n    }\n\n    return f(scheduler)\n  }\n\nconst withScheduler =\n  (f) => withDefaultScheduler(withSchedulerChecker(f))\n\nexport {\n  withDefaultScheduler,\n  withSchedulerChecker,\n  withScheduler,\n}\n","import { defer, interval } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nconst msElapsed =\n  (scheduler) =>\n    defer(() => {\n      const startTime = scheduler.now()\n\n      return interval(0, scheduler).pipe(\n        map(() => scheduler.now() - startTime),\n      )\n    })\n\nexport {\n  msElapsed,\n}\n","import { withScheduler } from './schedulerUtils'\nimport { msElapsed as msElapsed_ } from './internal/msElapsed'\n\nconst msElapsed = withScheduler(msElapsed_)\n\nexport {\n  msElapsed,\n}\n","import { concat } from 'rxjs'\nimport { map, takeWhile } from 'rxjs/operators'\n\nimport { msElapsed } from './msElapsed'\n\nconst durationTypeErrorMessage =\n  'second argument (duration) of during should be a number'\nconst durationRangeErrorMessage =\n  'second argument (duration) of during should be a positive number'\n\nconst during =\n  (scheduler) => (duration) => {\n    if (typeof duration !== 'number') {\n      throw new TypeError(durationTypeErrorMessage)\n    }\n\n    if (duration <= 0) {\n      throw new RangeError(durationRangeErrorMessage)\n    }\n\n    return msElapsed(scheduler).pipe(\n      map((ms) => ms / duration),\n      takeWhile((percent) => percent < 1),\n      (res$) => concat(res$, [1]),\n    )\n  }\n\nexport {\n  during,\n}\n","import { withScheduler } from './schedulerUtils'\nimport { during as during_ } from './internal/during'\n\nconst during = withScheduler(during_)\n\nexport {\n  during,\n}\n","import { interval } from 'rxjs'\nimport { map, take } from 'rxjs/operators'\n\nconst periodTypeErrorMessage =\n  'second argument (period) of periodOf should be a number'\nconst periodRangeErrorMessage =\n  'second argument (period) of periodOf should be a positive number'\n\nconst cyclesTypeErrorMessage =\n  'third argument (cycles) of periodOf should be undefined or a number'\nconst cyclesRangeErrorMessage =\n  'third argument (cycles) of periodOf should be a positive number'\n\nconst periodOf =\n  (scheduler) => (period, cycles) => {\n    if (typeof period !== 'number') {\n      throw new TypeError(periodTypeErrorMessage)\n    }\n\n    if (period <= 0) {\n      throw new RangeError(periodRangeErrorMessage)\n    }\n\n    if (cycles) {\n      if (typeof cycles !== 'number') {\n        throw new TypeError(cyclesTypeErrorMessage)\n      }\n\n      if (cycles <= 0) {\n        throw new RangeError(cyclesRangeErrorMessage)\n      }\n    }\n\n    cycles = cycles || Number.POSITIVE_INFINITY\n\n    return interval(period, scheduler).pipe(\n      map((cycle) => cycle + 1),\n      take(cycles),\n    )\n  }\n\nexport {\n  periodOf,\n}\n","import { withScheduler } from './schedulerUtils'\nimport { periodOf as periodOf_ } from './internal/periodOf'\n\nconst periodOf = withScheduler(periodOf_)\n\nexport {\n  periodOf,\n}\n","import { interval } from 'rxjs'\nimport { map, take } from 'rxjs/operators'\n\nconst periodTypeErrorMessage =\n  'second argument (period) of toggle should be a number'\nconst periodRangeErrorMessage =\n  'second argument (period) of toggle should be a positive number'\n\nconst cyclesTypeErrorMessage =\n  'third argument (cycles) of toggle should be undefined or a number'\nconst cyclesRangeErrorMessage =\n  'third argument (cycles) of toggle should be a positive number'\n\nconst toggle =\n  (scheduler) => (period, cycles) => {\n    if (typeof period !== 'number') {\n      throw new TypeError(periodTypeErrorMessage)\n    }\n\n    if (period <= 0) {\n      throw new RangeError(periodRangeErrorMessage)\n    }\n\n    if (cycles) {\n      if (typeof cycles !== 'number') {\n        throw new TypeError(cyclesTypeErrorMessage)\n      }\n\n      if (cycles <= 0) {\n        throw new RangeError(cyclesRangeErrorMessage)\n      }\n    }\n\n    cycles = cycles || Number.POSITIVE_INFINITY\n\n    return interval(period, scheduler).pipe(\n      map((cycle) => cycle % 2 === 0),\n      take(cycles),\n    )\n  }\n\nexport {\n  toggle,\n}\n","import { withScheduler } from './schedulerUtils'\nimport { toggle as toggle_ } from './internal/toggle'\n\nconst toggle = withScheduler(toggle_)\n\nexport {\n  toggle,\n}\n","const buildRangeError = (name) => {\n  const errorMessage =\n    `input of ${name} should be smaller than 1, and larger than 0`\n\n  return new RangeError(errorMessage)\n}\nconst buildTypeError = () => {\n  const errorMessage =\n    `input of withDomainChecker should have in, out, inout property.`\n\n  return new TypeError(errorMessage)\n}\n\nconst withDomainCheckerImpl = (f) => (x) => {\n  if (x < 0 || x > 1) {\n    throw buildRangeError(f.name)\n  }\n\n  return f(x)\n}\nconst withDomainChecker = (f) => {\n  if (!f.in || !f.out || !f.inout) {\n    throw buildTypeError()\n  }\n\n  const newF = withDomainCheckerImpl(f)\n  newF.in = withDomainCheckerImpl(f.in)\n  newF.out = withDomainCheckerImpl(f.out)\n  newF.inout = withDomainCheckerImpl(f.inout)\n\n  return newF\n}\n\nconst asEaseOut = (f) => (x) => 1 - f(1 - x)\nconst asEaseInOut = (f) => (x) => x < 0.5 ?\n  f(2 * x) / 2 :\n  1 - f(2 * (1 - x)) / 2\n\nexport {\n  asEaseOut,\n  asEaseInOut,\n  withDomainChecker,\n}\n","import { asEaseOut, asEaseInOut } from './easingUtils'\n\nconst linear = (x) => x\n\nlinear.in = linear\nlinear.out = asEaseOut(linear)\nlinear.inout = asEaseInOut(linear)\n\nexport {\n  linear,\n}\n","import { asEaseOut, asEaseInOut } from './easingUtils'\n\nconst quadratic = (x) => x*x\n\nquadratic.in = quadratic\nquadratic.out = asEaseOut(quadratic)\nquadratic.inout = asEaseInOut(quadratic)\n\nexport {\n  quadratic,\n}\n","import { asEaseOut, asEaseInOut } from './easingUtils'\n\nconst cubic = (x) => x*x*x\n\ncubic.in = cubic\ncubic.out = asEaseOut(cubic)\ncubic.inout = asEaseInOut(cubic)\n\nexport {\n  cubic,\n}\n","const sine = (x) => 1 - Math.cos(x * Math.PI / 2)\n\nsine.in = sine\nsine.out = (x) => Math.sin(x * Math.PI / 2)\nsine.inout = (x) => (1 - Math.cos(x * Math.PI)) / 2\n\nexport {\n  sine,\n}\n","import { asEaseOut, asEaseInOut } from './easingUtils'\n\nconst exponential = (x) => x === 0 ? 0 : Math.pow(2, 10 * (x - 1))\n\nexponential.in = exponential\nexponential.out = asEaseOut(exponential)\nexponential.inout = asEaseInOut(exponential)\n\nexport {\n  exponential,\n}\n","import { asEaseOut, asEaseInOut } from './easingUtils'\n\nconst { PI, pow, sin } = Math\n\nconst elastic = (t) => t === 0 ?\n  0 :\n  pow(2, 10 * (t - 1)) * sin(t * (13 / 2) * PI)\n\nelastic.in = elastic\nelastic.out = asEaseOut(elastic)\nelastic.inout = asEaseInOut(elastic)\n\nexport {\n  elastic,\n}\n","import { asEaseInOut, asEaseOut } from './easingUtils'\n\nconst circle = (t) => 1 - Math.sqrt(1 - t*t)\n\ncircle.in = circle\ncircle.out = asEaseOut(circle)\ncircle.inout = asEaseInOut(circle)\n\nexport {\n  circle,\n}\n","import { asEaseInOut, asEaseOut } from './easingUtils'\n\nconst back = (t) => t * t * (Math.E * t - Math.E + 1)\n\nback.in = back\nback.out = asEaseOut(back)\nback.inout = asEaseInOut(back)\n\nexport {\n  back,\n}\n","import { linear as linear_ } from './linear'\nimport { quadratic as quadratic_ } from './quadratic'\nimport { cubic as cubic_ } from './cubic'\nimport { sine as sine_ } from './sine'\nimport { exponential as exponential_ } from './exponential'\nimport { elastic as elastic_ } from './elastic'\nimport { circle as circle_ } from './circle'\nimport { back as back_ } from './back'\nimport { withDomainChecker } from './easingUtils'\n\nconst linear = withDomainChecker(linear_)\nconst quadratic = withDomainChecker(quadratic_)\nconst cubic = withDomainChecker(cubic_)\nconst sine = withDomainChecker(sine_)\nconst exponential = withDomainChecker(exponential_)\nconst elastic = withDomainChecker(elastic_)\nconst circle = withDomainChecker(circle_)\nconst back = withDomainChecker(back_)\n\nexport {\n  linear,\n  quadratic,\n  cubic,\n  sine,\n  exponential,\n  elastic,\n  circle,\n  back,\n}\n"],"names":["defaultScheduler","animationFrameScheduler","withDefaultScheduler","f","scheduler","buildSchedulerTypeError","name","errorMessage","TypeError","withSchedulerChecker","Scheduler","withScheduler","msElapsed","defer","startTime","now","interval","pipe","map","msElapsed_","durationTypeErrorMessage","durationRangeErrorMessage","during","duration","RangeError","ms","takeWhile","percent","res$","concat","during_","periodTypeErrorMessage","periodRangeErrorMessage","cyclesTypeErrorMessage","cyclesRangeErrorMessage","periodOf","period","cycles","Number","POSITIVE_INFINITY","cycle","take","periodOf_","toggle","toggle_","buildRangeError","buildTypeError","withDomainCheckerImpl","x","withDomainChecker","in","out","inout","newF","asEaseOut","asEaseInOut","linear","quadratic","cubic","sine","Math","cos","PI","sin","exponential","pow","elastic","t","circle","sqrt","back","E","linear_","quadratic_","cubic_","sine_","exponential_","elastic_","circle_","back_"],"mappings":";;;;;;EAEA,IAAMA,mBAAmBC,4BAAzB;;EAEA,IAAMC,uBACJ,SADIA,oBACJ,CAACC,CAAD;EAAA,SAAO;EAAA,QAACC,SAAD,uEAAaJ,gBAAb;EAAA,WAAkCG,EAAEC,SAAF,CAAlC;EAAA,GAAP;EAAA,CADF;;EAGA,IAAMC,0BAA0B,SAA1BA,uBAA0B,CAACC,IAAD,EAAU;EACxC,MAAMC,4CACuBD,IADvB,qCAAN;;EAGA,SAAO,IAAIE,SAAJ,CAAcD,YAAd,CAAP;EACD,CALD;EAMA,IAAME,uBACJ,SADIA,oBACJ,CAACN,CAAD;EAAA,SAAO,UAACC,SAAD,EAAe;EACpB,QAAI,EAAEA,qBAAqBM,cAAvB,CAAJ,EAAuC;EACrC,YAAML,wBAAwBF,EAAEG,IAA1B,CAAN;EACD;;EAED,WAAOH,EAAEC,SAAF,CAAP;EACD,GAND;EAAA,CADF;;EASA,IAAMO,gBACJ,SADIA,aACJ,CAACR,CAAD;EAAA,SAAOD,qBAAqBO,qBAAqBN,CAArB,CAArB,CAAP;EAAA,CADF;;ECnBA,IAAMS,YACJ,SADIA,SACJ,CAACR,SAAD;EAAA,SACES,WAAM,YAAM;EACV,QAAMC,YAAYV,UAAUW,GAAV,EAAlB;;EAEA,WAAOC,cAAS,CAAT,EAAYZ,SAAZ,EAAuBa,IAAvB,CACLC,cAAI;EAAA,aAAMd,UAAUW,GAAV,KAAkBD,SAAxB;EAAA,KAAJ,CADK,CAAP;EAGD,GAND,CADF;EAAA,CADF;;MCAMF,cAAYD,cAAcQ,SAAd;;ECElB,IAAMC,2BACJ,yDADF;EAEA,IAAMC,4BACJ,kEADF;;EAGA,IAAMC,SACJ,SADIA,MACJ,CAAClB,SAAD;EAAA,SAAe,UAACmB,QAAD,EAAc;EAC3B,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;EAChC,YAAM,IAAIf,SAAJ,CAAcY,wBAAd,CAAN;EACD;;EAED,QAAIG,YAAY,CAAhB,EAAmB;EACjB,YAAM,IAAIC,UAAJ,CAAeH,yBAAf,CAAN;EACD;;EAED,WAAOT,UAAUR,SAAV,EAAqBa,IAArB,CACLC,cAAI,UAACO,EAAD;EAAA,aAAQA,KAAKF,QAAb;EAAA,KAAJ,CADK,EAELG,oBAAU,UAACC,OAAD;EAAA,aAAaA,UAAU,CAAvB;EAAA,KAAV,CAFK,EAGL,UAACC,IAAD;EAAA,aAAUC,YAAOD,IAAP,EAAa,CAAC,CAAD,CAAb,CAAV;EAAA,KAHK,CAAP;EAKD,GAdD;EAAA,CADF;;MCPMN,WAASX,cAAcmB,MAAd;;ECAf,IAAMC,yBACJ,yDADF;EAEA,IAAMC,0BACJ,kEADF;;EAGA,IAAMC,yBACJ,qEADF;EAEA,IAAMC,0BACJ,iEADF;;EAGA,IAAMC,WACJ,SADIA,QACJ,CAAC/B,SAAD;EAAA,SAAe,UAACgC,MAAD,EAASC,MAAT,EAAoB;EACjC,QAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;EAC9B,YAAM,IAAI5B,SAAJ,CAAcuB,sBAAd,CAAN;EACD;;EAED,QAAIK,UAAU,CAAd,EAAiB;EACf,YAAM,IAAIZ,UAAJ,CAAeQ,uBAAf,CAAN;EACD;;EAED,QAAIK,MAAJ,EAAY;EACV,UAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;EAC9B,cAAM,IAAI7B,SAAJ,CAAcyB,sBAAd,CAAN;EACD;;EAED,UAAII,UAAU,CAAd,EAAiB;EACf,cAAM,IAAIb,UAAJ,CAAeU,uBAAf,CAAN;EACD;EACF;;EAEDG,aAASA,UAAUC,OAAOC,iBAA1B;;EAEA,WAAOvB,cAASoB,MAAT,EAAiBhC,SAAjB,EAA4Ba,IAA5B,CACLC,cAAI,UAACsB,KAAD;EAAA,aAAWA,QAAQ,CAAnB;EAAA,KAAJ,CADK,EAELC,eAAKJ,MAAL,CAFK,CAAP;EAID,GAzBD;EAAA,CADF;;MCVMF,aAAWxB,cAAc+B,QAAd;;ECAjB,IAAMX,2BACJ,uDADF;EAEA,IAAMC,4BACJ,gEADF;;EAGA,IAAMC,2BACJ,mEADF;EAEA,IAAMC,4BACJ,+DADF;;EAGA,IAAMS,SACJ,SADIA,MACJ,CAACvC,SAAD;EAAA,SAAe,UAACgC,MAAD,EAASC,MAAT,EAAoB;EACjC,QAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;EAC9B,YAAM,IAAI5B,SAAJ,CAAcuB,wBAAd,CAAN;EACD;;EAED,QAAIK,UAAU,CAAd,EAAiB;EACf,YAAM,IAAIZ,UAAJ,CAAeQ,yBAAf,CAAN;EACD;;EAED,QAAIK,MAAJ,EAAY;EACV,UAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;EAC9B,cAAM,IAAI7B,SAAJ,CAAcyB,wBAAd,CAAN;EACD;;EAED,UAAII,UAAU,CAAd,EAAiB;EACf,cAAM,IAAIb,UAAJ,CAAeU,yBAAf,CAAN;EACD;EACF;;EAEDG,aAASA,UAAUC,OAAOC,iBAA1B;;EAEA,WAAOvB,cAASoB,MAAT,EAAiBhC,SAAjB,EAA4Ba,IAA5B,CACLC,cAAI,UAACsB,KAAD;EAAA,aAAWA,QAAQ,CAAR,KAAc,CAAzB;EAAA,KAAJ,CADK,EAELC,eAAKJ,MAAL,CAFK,CAAP;EAID,GAzBD;EAAA,CADF;;MCVMM,WAAShC,cAAciC,MAAd;;ECHf,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACvC,IAAD,EAAU;EAChC,MAAMC,6BACQD,IADR,iDAAN;;EAGA,SAAO,IAAIkB,UAAJ,CAAejB,YAAf,CAAP;EACD,CALD;EAMA,IAAMuC,iBAAiB,SAAjBA,cAAiB,GAAM;EAC3B,MAAMvC,gFAAN;;EAGA,SAAO,IAAIC,SAAJ,CAAcD,YAAd,CAAP;EACD,CALD;;EAOA,IAAMwC,wBAAwB,SAAxBA,qBAAwB,CAAC5C,CAAD;EAAA,SAAO,UAAC6C,CAAD,EAAO;EAC1C,QAAIA,IAAI,CAAJ,IAASA,IAAI,CAAjB,EAAoB;EAClB,YAAMH,gBAAgB1C,EAAEG,IAAlB,CAAN;EACD;;EAED,WAAOH,EAAE6C,CAAF,CAAP;EACD,GAN6B;EAAA,CAA9B;EAOA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAAC9C,CAAD,EAAO;EAC/B,MAAI,CAACA,EAAE+C,EAAH,IAAS,CAAC/C,EAAEgD,GAAZ,IAAmB,CAAChD,EAAEiD,KAA1B,EAAiC;EAC/B,UAAMN,gBAAN;EACD;;EAED,MAAMO,OAAON,sBAAsB5C,CAAtB,CAAb;EACAkD,OAAKH,EAAL,GAAUH,sBAAsB5C,EAAE+C,EAAxB,CAAV;EACAG,OAAKF,GAAL,GAAWJ,sBAAsB5C,EAAEgD,GAAxB,CAAX;EACAE,OAAKD,KAAL,GAAaL,sBAAsB5C,EAAEiD,KAAxB,CAAb;;EAEA,SAAOC,IAAP;EACD,CAXD;;EAaA,IAAMC,YAAY,SAAZA,SAAY,CAACnD,CAAD;EAAA,SAAO,UAAC6C,CAAD;EAAA,WAAO,IAAI7C,EAAE,IAAI6C,CAAN,CAAX;EAAA,GAAP;EAAA,CAAlB;EACA,IAAMO,cAAc,SAAdA,WAAc,CAACpD,CAAD;EAAA,SAAO,UAAC6C,CAAD;EAAA,WAAOA,IAAI,GAAJ,GAChC7C,EAAE,IAAI6C,CAAN,IAAW,CADqB,GAEhC,IAAI7C,EAAE,KAAK,IAAI6C,CAAT,CAAF,IAAiB,CAFI;EAAA,GAAP;EAAA,CAApB;;EChCA,IAAMQ,SAAS,SAATA,MAAS,CAACR,CAAD;EAAA,SAAOA,CAAP;EAAA,CAAf;;EAEAQ,OAAON,EAAP,GAAYM,MAAZ;EACAA,OAAOL,GAAP,GAAaG,UAAUE,MAAV,CAAb;EACAA,OAAOJ,KAAP,GAAeG,YAAYC,MAAZ,CAAf;;ECJA,IAAMC,YAAY,SAAZA,SAAY,CAACT,CAAD;EAAA,SAAOA,IAAEA,CAAT;EAAA,CAAlB;;EAEAS,UAAUP,EAAV,GAAeO,SAAf;EACAA,UAAUN,GAAV,GAAgBG,UAAUG,SAAV,CAAhB;EACAA,UAAUL,KAAV,GAAkBG,YAAYE,SAAZ,CAAlB;;ECJA,IAAMC,QAAQ,SAARA,KAAQ,CAACV,CAAD;EAAA,SAAOA,IAAEA,CAAF,GAAIA,CAAX;EAAA,CAAd;;EAEAU,MAAMR,EAAN,GAAWQ,KAAX;EACAA,MAAMP,GAAN,GAAYG,UAAUI,KAAV,CAAZ;EACAA,MAAMN,KAAN,GAAcG,YAAYG,KAAZ,CAAd;;ECNA,IAAMC,OAAO,SAAPA,IAAO,CAACX,CAAD;EAAA,SAAO,IAAIY,KAAKC,GAAL,CAASb,IAAIY,KAAKE,EAAT,GAAc,CAAvB,CAAX;EAAA,CAAb;;EAEAH,KAAKT,EAAL,GAAUS,IAAV;EACAA,KAAKR,GAAL,GAAW,UAACH,CAAD;EAAA,SAAOY,KAAKG,GAAL,CAASf,IAAIY,KAAKE,EAAT,GAAc,CAAvB,CAAP;EAAA,CAAX;EACAH,KAAKP,KAAL,GAAa,UAACJ,CAAD;EAAA,SAAO,CAAC,IAAIY,KAAKC,GAAL,CAASb,IAAIY,KAAKE,EAAlB,CAAL,IAA8B,CAArC;EAAA,CAAb;;ECFA,IAAME,cAAc,SAAdA,WAAc,CAAChB,CAAD;EAAA,SAAOA,MAAM,CAAN,GAAU,CAAV,GAAcY,KAAKK,GAAL,CAAS,CAAT,EAAY,MAAMjB,IAAI,CAAV,CAAZ,CAArB;EAAA,CAApB;;EAEAgB,YAAYd,EAAZ,GAAiBc,WAAjB;EACAA,YAAYb,GAAZ,GAAkBG,UAAUU,WAAV,CAAlB;EACAA,YAAYZ,KAAZ,GAAoBG,YAAYS,WAAZ,CAApB;;MCJQF,KAAiBF,KAAjBE;MAAIG,MAAaL,KAAbK;MAAKF,MAAQH,KAARG;;;EAEjB,IAAMG,UAAU,SAAVA,OAAU,CAACC,CAAD;EAAA,SAAOA,MAAM,CAAN,GACrB,CADqB,GAErBF,IAAI,CAAJ,EAAO,MAAME,IAAI,CAAV,CAAP,IAAuBJ,IAAII,KAAK,KAAK,CAAV,IAAeL,EAAnB,CAFT;EAAA,CAAhB;;EAIAI,QAAQhB,EAAR,GAAagB,OAAb;EACAA,QAAQf,GAAR,GAAcG,UAAUY,OAAV,CAAd;EACAA,QAAQd,KAAR,GAAgBG,YAAYW,OAAZ,CAAhB;;ECRA,IAAME,SAAS,SAATA,MAAS,CAACD,CAAD;EAAA,SAAO,IAAIP,KAAKS,IAAL,CAAU,IAAIF,IAAEA,CAAhB,CAAX;EAAA,CAAf;;EAEAC,OAAOlB,EAAP,GAAYkB,MAAZ;EACAA,OAAOjB,GAAP,GAAaG,UAAUc,MAAV,CAAb;EACAA,OAAOhB,KAAP,GAAeG,YAAYa,MAAZ,CAAf;;ECJA,IAAME,OAAO,SAAPA,IAAO,CAACH,CAAD;EAAA,SAAOA,IAAIA,CAAJ,IAASP,KAAKW,CAAL,GAASJ,CAAT,GAAaP,KAAKW,CAAlB,GAAsB,CAA/B,CAAP;EAAA,CAAb;;EAEAD,KAAKpB,EAAL,GAAUoB,IAAV;EACAA,KAAKnB,GAAL,GAAWG,UAAUgB,IAAV,CAAX;EACAA,KAAKlB,KAAL,GAAaG,YAAYe,IAAZ,CAAb;;ECIA,IAAMd,WAASP,kBAAkBuB,MAAlB,CAAf;EACA,IAAMf,cAAYR,kBAAkBwB,SAAlB,CAAlB;EACA,IAAMf,UAAQT,kBAAkByB,KAAlB,CAAd;EACA,IAAMf,SAAOV,kBAAkB0B,IAAlB,CAAb;EACA,IAAMX,gBAAcf,kBAAkB2B,WAAlB,CAApB;EACA,IAAMV,YAAUjB,kBAAkB4B,OAAlB,CAAhB;EACA,IAAMT,WAASnB,kBAAkB6B,MAAlB,CAAf;EACA,IAAMR,SAAOrB,kBAAkB8B,IAAlB,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}